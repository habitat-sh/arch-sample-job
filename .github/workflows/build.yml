# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build and Test

# or on: [push]
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
   
    - name: Set up Go environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.19.x
        cache: true
        check-latest: true
#      run: go version

#    - name: Install dependencies
#       run: |
#        go get -u golang.org/x/lint/golint
#        go get .
#          go get example.com/octo-examplemodule
#          go get example.com/octo-examplemodule@v1.3.4

    - name: Run vet & lint
      run: |
        go vet .
#        golint .

    - name: Build
      run: go build -v ./...
#       or go build .      

    - name: Test
      run: go test -v ./...
# or run: cd test && go test -v (different folder)
      
#    - name: Test with Go
#        run: go test -json > TestResults-${{ matrix.go-version }}.json
#    - name: Upload Go test results
#        uses: actions/upload-artifact@v3
#        with:
#          name: Go-results-${{ matrix.go-version }}
#          path: TestResults-${{ matrix.go-version }}.json